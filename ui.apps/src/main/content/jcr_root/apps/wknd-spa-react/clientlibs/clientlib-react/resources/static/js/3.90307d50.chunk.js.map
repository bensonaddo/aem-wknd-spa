{"version":3,"sources":["components/Text/Text.js","utils/extract-model-id.js","utils/common.js"],"names":["require","TextEditConfig","emptyLabel","isEmpty","props","console","log","text","trim","length","Text","Component","richTextContent","_jsx","id","path","this","cqPath","replace","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","textContent","alignment","classSelector","children","selector","htmlInput","description","className","purifyHtmlContent","render","richText","MapTo"],"mappings":"qMAsBAA,EAAQ,KAWR,MAAMC,EAAiB,CACrBC,WAAY,OAEZC,QAAS,SAASC,GAIhB,OAHAC,QAAQC,IAAI,gCACZD,QAAQC,IAAIF,IAEJA,IAAUA,EAAMG,MAAQH,EAAMG,KAAKC,OAAOC,OAAS,CAC7D,GAMF,MAAMC,UAAaC,YACbC,sBACF,OACEC,cAAA,OACEC,IC7B+BC,ED6BZC,KAAKZ,MAAMa,OC5B7BF,GAAQA,EAAKG,QAAQ,QAAS,MD6B/B,0BACAC,wBAAyB,CACvBC,OAAQC,IAAUC,SAASN,KAAKZ,MAAMG,SChCjC,IAAwBQ,CDoCrC,CAEIQ,kBACF,MAAMC,EAAYR,KAAKZ,MAAMoB,UAC7B,IAAIC,EAA8B,MAAbD,EAAqB,aAAeA,EAAY,GAErE,OACEX,cAAA,OAAAa,UElDqCC,EFmDRF,EEnDkBG,EFmDHZ,KAAKZ,MAAMyB,YEhD1ChB,cAAA,QAAMiB,UAAWH,EAAUR,wBAAyB,CAACC,OAAQC,IAAUC,SAASM,SAHlEG,IAAUJ,EAAUC,CFsDnD,CAEAI,SAIE,OAHA3B,QAAQC,IAAI,qBACZD,QAAQC,IAAIU,KAAKZ,OAEVY,KAAKZ,MAAM6B,SAAWjB,KAAKJ,gBAAkBI,KAAKO,WAC3D,EAGaW,0BAAM,iCAANA,CACbxB,EACAT,E","file":"static/js/3.90307d50.chunk.js","sourcesContent":["/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n ~ Copyright 2020 Adobe Systems Incorporated\n ~\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n ~ you may not use this file except in compliance with the License.\n ~ You may obtain a copy of the License at\n ~\n ~     http://www.apache.org/licenses/LICENSE-2.0\n ~\n ~ Unless required by applicable law or agreed to in writing, software\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n ~ See the License for the specific language governing permissions and\n ~ limitations under the License.\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\nimport { MapTo } from '@adobe/aem-react-editable-components';\nimport DOMPurify from 'dompurify';\nimport React, { Component } from 'react';\nimport extractModelId from '../../utils/extract-model-id';\nimport {purifyHtmlContent} from \"../../utils/common.js\";\n\nrequire('./Text.scss');\n\n/**\n * Declare global variables\n */\n\n/**\n * Default Edit configuration for the Text component that interact with the Core Text component and sub-types\n *\n * @type EditConfig\n */\nconst TextEditConfig = {\n  emptyLabel: 'Text',\n\n  isEmpty: function(props) {\n    console.log(\"--- TextEditConfig isEmpty()\");\n    console.log(props);\n\n    return !props || !props.text || props.text.trim().length < 1;\n  }\n};\n\n/**\n * Text React component\n */\nclass Text extends Component {\n  get richTextContent() {\n    return (\n      <div\n        id={extractModelId(this.props.cqPath)}\n        data-rte-editelement\n        dangerouslySetInnerHTML={{\n          __html: DOMPurify.sanitize(this.props.text)\n        }}\n      />\n    );\n  }\n\n  get textContent() {\n    const alignment = this.props.alignment;\n    let classSelector = (alignment != null) ? \"alignment \" + alignment : \"\";\n\n    return (\n      <div>\n        {purifyHtmlContent('span', classSelector, this.props.description)}\n      </div>\n    );\n  }\n\n  render() {\n    console.log(\"--- Text render()\");\n    console.log(this.props);\n\n    return this.props.richText ? this.richTextContent : this.textContent;\n  }\n}\n\nexport default MapTo('wknd-spa-react/components/text')(\n  Text,\n  TextEditConfig\n);\n","/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n ~ Copyright 2020 Adobe Systems Incorporated\n ~\n ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n ~ you may not use this file except in compliance with the License.\n ~ You may obtain a copy of the License at\n ~\n ~     http://www.apache.org/licenses/LICENSE-2.0\n ~\n ~ Unless required by applicable law or agreed to in writing, software\n ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n ~ See the License for the specific language governing permissions and\n ~ limitations under the License.\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/\n\n/**\n * Extract an id from the cqModel field of given properties\n *\n * @param path - Path to be converted into an id\n * @returns {string|undefined}\n */\nexport default function extractModelId(path) {\n  return path && path.replace(/\\/|:/g, '_');\n}\n","import DOMPurify from 'dompurify';\n\n/**\n * @description Global util methods\n * @author dzung.vo@gmfinancial.com\n * @date 2023-05-09\n */\n\n/**\n * @description Purify DOM HTML tags\n * @param {string} htmlTag - String with <a> tag embedded (e.g. Please <a class=\"tomato\" href=\"${urlPlaceholder}\"> click here </a>)\n * @param {string} selector - Placeholder to replace\n * @param {string} htmlInput - Url\n * @return {*}  {string}\n */\nexport const purifyHtmlContent = (htmlTag, selector, htmlInput) => {\n    //console.log(\"--- purifyHtmlContent(): \" + selector + \" | htmlInput: \" + htmlInput);\n\n    var $element = <span className={selector} dangerouslySetInnerHTML={{__html: DOMPurify.sanitize(htmlInput)}}></span>;\n\n    return $element;\n};\n\nexport const round = (value, precision) => {\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n};"],"sourceRoot":""}